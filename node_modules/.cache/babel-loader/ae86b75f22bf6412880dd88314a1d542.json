{"ast":null,"code":"var _jsxFileName = \"/home/lucas/code/lucsande/file-tree-writer/src/components/FileTree/index.js\";\nimport React, { useState } from \"react\";\nimport { FileTreeContainer } from \"./styles\";\n\nfunction FileTree(props) {\n  const {\n    fileTree\n  } = props; // const horPipe = \"─\";\n\n  const blank = \"    \";\n  const iPipe = \" |  \";\n  const tPipe = \" ├──\";\n  const lPipe = \" └──\";\n\n  const writeLines = ({\n    treeNode,\n    isLastChild,\n    parentWasLastChild,\n    inheritedPrefix\n  }) => {\n    const pipeOrBlank = parenWasLastChild ? blank : pipe;\n    const tpipeOrLpipe = isLastChild ? lPipe : tPipe;\n    const nodeLine = inheritedPrefix + pipeOrBlank + tpipeOrLpipe + treeNode.name;\n    let childrenLines = '';\n    if (treeNode.isFolder) childrenLines = \"\";\n    return childrenLines + nodeLine;\n  };\n\n  const writeLine = (treeNode, col = 0) => {};\n\n  return /*#__PURE__*/React.createElement(FileTreeContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, JSON.stringify(fileTree)));\n}\n\nexport default FileTree;","map":{"version":3,"sources":["/home/lucas/code/lucsande/file-tree-writer/src/components/FileTree/index.js"],"names":["React","useState","FileTreeContainer","FileTree","props","fileTree","blank","iPipe","tPipe","lPipe","writeLines","treeNode","isLastChild","parentWasLastChild","inheritedPrefix","pipeOrBlank","parenWasLastChild","pipe","tpipeOrLpipe","nodeLine","name","childrenLines","isFolder","writeLine","col","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,UAAlC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB,CADuB,CAGvB;;AACA,QAAME,KAAK,GAAG,MAAd;AACA,QAAMC,KAAK,GAAG,MAAd;AACA,QAAMC,KAAK,GAAG,MAAd;AACA,QAAMC,KAAK,GAAG,MAAd;;AAEA,QAAMC,UAAU,GAAG,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,kBAAzB;AAA6CC,IAAAA;AAA7C,GAAD,KAAoE;AACrF,UAAMC,WAAW,GAAGC,iBAAiB,GAAGV,KAAH,GAAWW,IAAhD;AACA,UAAMC,YAAY,GAAGN,WAAW,GAAGH,KAAH,GAAWD,KAA3C;AACA,UAAMW,QAAQ,GAAGL,eAAe,GAAGC,WAAlB,GAAgCG,YAAhC,GAA+CP,QAAQ,CAACS,IAAzE;AAEA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAGV,QAAQ,CAACW,QAAZ,EAAsBD,aAAa,GAAG,EAAhB;AAEtB,WAAOA,aAAa,GAAGF,QAAvB;AACD,GATD;;AAWA,QAAMI,SAAS,GAAG,CAACZ,QAAD,EAAWa,GAAG,GAAG,CAAjB,KAAuB,CAAE,CAA3C;;AAEA,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACC,SAAL,CAAerB,QAAf,CAAP,CADF,CADF;AAKD;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FileTreeContainer } from \"./styles\";\n\nfunction FileTree(props) {\n  const { fileTree } = props;\n\n  // const horPipe = \"─\";\n  const blank = \"    \";\n  const iPipe = \" |  \";\n  const tPipe = \" ├──\";\n  const lPipe = \" └──\";\n\n  const writeLines = ({ treeNode, isLastChild, parentWasLastChild, inheritedPrefix }) => {\n    const pipeOrBlank = parenWasLastChild ? blank : pipe;\n    const tpipeOrLpipe = isLastChild ? lPipe : tPipe;\n    const nodeLine = inheritedPrefix + pipeOrBlank + tpipeOrLpipe + treeNode.name;\n\n    let childrenLines = ''\n    if(treeNode.isFolder) childrenLines = \"\";\n\n    return childrenLines + nodeLine\n  };\n\n  const writeLine = (treeNode, col = 0) => {};\n\n  return (\n    <FileTreeContainer>\n      <code>{JSON.stringify(fileTree)}</code>\n    </FileTreeContainer>\n  );\n}\n\nexport default FileTree;\n"]},"metadata":{},"sourceType":"module"}